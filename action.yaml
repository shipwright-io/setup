---
name: Shipwright Setup (CI)
description: Installs Shipwright Build Controller, CLI and Container Registry
branding:
  color: blue
  icon: anchor
inputs:
  pipeline_version:
    description: Tekton Pipelines release version
    required: false
    default: latest
  feature_flags:
    description: |
      JSON payload for the Tekton Pipelines feature-flags, a configmap containing features toggles.
      For instance '{ "enable-custom-tasks": "true" }'.
    required: false
    default: '{}'
  shipwright_ref:
    description: Shipwright Build Controller repository reference, tag or SHA
    required: false
    default: v0.11.0
  cli_ref:
    description: Shipwright CLI repository reference, tag or SHA
    required: false
    default: v0.11.0
  setup_registry:
    description: When enabled, the action deploys a Container Registry instance
    required: true
    default: "true"
  registry_hostname:
    description: Container Registry hostname inside KinD
    required: true
    default: registry.registry.svc.cluster.local
  patch_etc_hosts:
    description: Patch "/etc/hosts" to alias the Container Registry hostname to "127.0.0.1"
    required: true
    default: "true"
runs:
  using: composite
  steps:
    - uses: openshift-pipelines/setup-tektoncd@v1
      with:
        pipeline_version: ${{ inputs.pipeline_version }}
        feature_flags:  ${{ inputs.feature_flags }}
        cli_version: latest
        setup_registry: ${{ inputs.setup_registry }}
        patch_etc_hosts: ${{ inputs.patch_etc_hosts }}

    # pre-flight checks, making sure the dependencies needed for the upcoming steps are available
    - shell: bash
      working-directory: ${{ github.action_path }}
      run: ./probe.sh

    # checking out the build controller project locally to perform the rollout and inspection of the
    # controller instance in the cluster
    - uses: actions/checkout@v3
      with:
        repository: shipwright-io/build
        ref: ${{ inputs.shipwright_ref }}
        path: src/build
      if: ${{ inputs.shipwright_ref != '_ignore' }}
    - shell: bash
      working-directory: ${{ github.action_path }}
      if: ${{ inputs.shipwright-ref != '_ignore' }}
      run: ./install-shipwright.sh

    # checking out the CLI project locally, performing the installation to let it available on PATH
    - uses: actions/checkout@v3
      with:
        repository: shipwright-io/cli
        ref: ${{ inputs.cli_hef }}
        path: src/cli
      if: ${{ inputs.cli_ref != '_ignore' }}
    - shell: bash
      working-directory: ${{ github.action_path }}
      if: ${{ inputs.cli_ref != '_ignore' }}
      run: ./install-cli.sh
